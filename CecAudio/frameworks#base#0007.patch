From ef838f998935c2c5a2899fa9fa417fdefcde4c1a Mon Sep 17 00:00:00 2001
From: Jinping Wang <jinping.wang@amlogic.com>
Date: Wed, 1 Aug 2018 18:53:25 +0800
Subject: [PATCH] cec: add pass through for playback [1/2]

PD#170574

add pass through for playback

Change-Id: I50b460f8cd1b861894a6df420e24f0a4239d44e2
---
 .../com/android/server/audio/AudioService.java     | 41 +++++++++++++++++++++-
 1 file changed, 40 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/audio/AudioService.java b/services/core/java/com/android/server/audio/AudioService.java
index d1de55d..67e5365 100644
--- a/services/core/java/com/android/server/audio/AudioService.java
+++ b/services/core/java/com/android/server/audio/AudioService.java
@@ -155,7 +155,10 @@ import java.util.Iterator;
 import java.util.List;
 import java.util.NoSuchElementException;
 import java.util.Objects;
-
+import android.provider.Settings;
+import android.app.AlertDialog;
+import android.app.AlertDialog.Builder;
+import android.view.WindowManager;
 /**
  * The implementation of the volume manager service.
  * <p>
@@ -1683,6 +1686,42 @@ public class AudioService extends IAudioService.Stub
         if (adjustVolume && (direction != AudioManager.ADJUST_SAME)) {
             mAudioHandler.removeMessages(MSG_UNMUTE_STREAM);
 
+            boolean routePassthroughVolume = SystemProperties.getBoolean("audio.passthrough.volume.route2cec", false)
+                    && SystemProperties.getBoolean("audio.passthrough.enable", false);
+            boolean hdmiControlEnabled = (Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.HDMI_CONTROL_ENABLED, 1) == 1);
+            Log.d(TAG, "adjustStreamVolume() routePassthroughVolume=" + routePassthroughVolume + ", hdmiControlEnabled=" + hdmiControlEnabled);
+            if (routePassthroughVolume && !isMuteAdjust) {
+                if (hdmiControlEnabled) {
+                    if (mHdmiManager != null) {
+                        synchronized (mHdmiManager) {
+                            // mHdmiCecSink true => mHdmiPlaybackClient != null
+                            if (streamTypeAlias == AudioSystem.STREAM_MUSIC) {
+                                synchronized (mHdmiPlaybackClient) {
+                                    int keyCode = isMuteAdjust ? KeyEvent.KEYCODE_VOLUME_MUTE : ((direction == -1) ? KeyEvent.KEYCODE_VOLUME_DOWN : KeyEvent.KEYCODE_VOLUME_UP);
+                                    final long ident = Binder.clearCallingIdentity();
+                                    try {
+                                        mHdmiPlaybackClient.sendKeyEvent(keyCode, true);
+                                        mHdmiPlaybackClient.sendKeyEvent(keyCode, false);
+                                    } finally {
+                                        Binder.restoreCallingIdentity(ident);
+                                    }
+                                }
+                            }
+                        }
+                    }
+                    return;
+                } else {
+                    Builder builder = new AlertDialog.Builder(mContext.getApplicationContext()).setTitle("not support!");
+                    final AlertDialog dialog = builder.create();
+                    dialog.getWindow().setType((WindowManager.LayoutParams.TYPE_SYSTEM_ALERT));
+                    mAudioHandler.post(new Runnable() {
+                        public void run() {
+                            dialog.show();
+                        }
+                    });
+                }
+            }
+
             if (isMuteAdjust) {
                 boolean state;
                 if (direction == AudioManager.ADJUST_TOGGLE_MUTE) {
-- 
1.9.1

